// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: xds/type/v3/cel.proto

package v3

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/cncf/xds/go/xds/annotations/v3"
	v1alpha1 "google.golang.org/genproto/googleapis/api/expr/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Either parsed or checked representation of the `Common Expression Language
// <https://github.com/google/cel-spec>`_ (CEL) program.
type CelExpression struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ExprSpecifier:
	//
	//	*CelExpression_ParsedExpr
	//	*CelExpression_CheckedExpr
	ExprSpecifier isCelExpression_ExprSpecifier `protobuf_oneof:"expr_specifier"`
	// Unparsed expression in string form. For example, “request.headers['x-env'] == 'prod'“ will
	// get “x-env“ header value and compare it with “prod“.
	// Check the `Common Expression Language <https://github.com/google/cel-spec>`_ for more details.
	//
	// If set, takes precedence over “cel_expr_parsed“ and “cel_expr_checked“.
	CelExprString string `protobuf:"bytes,5,opt,name=cel_expr_string,json=celExprString,proto3" json:"cel_expr_string,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CelExpression) Reset() {
	*x = CelExpression{}
	mi := &file_xds_type_v3_cel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CelExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CelExpression) ProtoMessage() {}

func (x *CelExpression) ProtoReflect() protoreflect.Message {
	mi := &file_xds_type_v3_cel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CelExpression.ProtoReflect.Descriptor instead.
func (*CelExpression) Descriptor() ([]byte, []int) {
	return file_xds_type_v3_cel_proto_rawDescGZIP(), []int{0}
}

func (x *CelExpression) GetExprSpecifier() isCelExpression_ExprSpecifier {
	if x != nil {
		return x.ExprSpecifier
	}
	return nil
}

// Deprecated: Marked as deprecated in xds/type/v3/cel.proto.
func (x *CelExpression) GetParsedExpr() *v1alpha1.ParsedExpr {
	if x != nil {
		if x, ok := x.ExprSpecifier.(*CelExpression_ParsedExpr); ok {
			return x.ParsedExpr
		}
	}
	return nil
}

// Deprecated: Marked as deprecated in xds/type/v3/cel.proto.
func (x *CelExpression) GetCheckedExpr() *v1alpha1.CheckedExpr {
	if x != nil {
		if x, ok := x.ExprSpecifier.(*CelExpression_CheckedExpr); ok {
			return x.CheckedExpr
		}
	}
	return nil
}

func (x *CelExpression) GetCelExprString() string {
	if x != nil {
		return x.CelExprString
	}
	return ""
}

type isCelExpression_ExprSpecifier interface {
	isCelExpression_ExprSpecifier()
}

type CelExpression_ParsedExpr struct {
	// Parsed expression in abstract syntax tree (AST) form.
	//
	// Deprecated -- use “cel_expr_parsed“ field instead.
	// If “cel_expr_parsed“ or “cel_expr_checked“ is set, this field is not used.
	//
	// Deprecated: Marked as deprecated in xds/type/v3/cel.proto.
	ParsedExpr *v1alpha1.ParsedExpr `protobuf:"bytes,1,opt,name=parsed_expr,json=parsedExpr,proto3,oneof"`
}

type CelExpression_CheckedExpr struct {
	// Parsed expression in abstract syntax tree (AST) form that has been successfully type checked.
	//
	// Deprecated -- use “cel_expr_checked“ field instead.
	// If “cel_expr_parsed“ or “cel_expr_checked“ is set, this field is not used.
	//
	// Deprecated: Marked as deprecated in xds/type/v3/cel.proto.
	CheckedExpr *v1alpha1.CheckedExpr `protobuf:"bytes,2,opt,name=checked_expr,json=checkedExpr,proto3,oneof"`
}

func (*CelExpression_ParsedExpr) isCelExpression_ExprSpecifier() {}

func (*CelExpression_CheckedExpr) isCelExpression_ExprSpecifier() {}

// Extracts a string by evaluating a `Common Expression Language
// <https://github.com/google/cel-spec>`_ (CEL) expression against the standardized set of
// :ref:`HTTP attributes <arch_overview_attributes>`.
//
// .. attention::
//
//	Besides CEL evaluation raising an error explicitly, CEL program returning a type other than
//	the ``string``, or not returning anything, are considered an error as well.
//
// [#comment:TODO(sergiitk): When implemented, add the extension tag.]
type CelExtractString struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The CEL expression used to extract a string from the CEL environment.
	// the "subject string") that should be replaced.
	ExprExtract *CelExpression `protobuf:"bytes,1,opt,name=expr_extract,json=exprExtract,proto3" json:"expr_extract,omitempty"`
	// If CEL expression evaluates to an error, this value is be returned to the caller.
	// If not set, the error is propagated to the caller.
	DefaultValue  *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CelExtractString) Reset() {
	*x = CelExtractString{}
	mi := &file_xds_type_v3_cel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CelExtractString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CelExtractString) ProtoMessage() {}

func (x *CelExtractString) ProtoReflect() protoreflect.Message {
	mi := &file_xds_type_v3_cel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CelExtractString.ProtoReflect.Descriptor instead.
func (*CelExtractString) Descriptor() ([]byte, []int) {
	return file_xds_type_v3_cel_proto_rawDescGZIP(), []int{1}
}

func (x *CelExtractString) GetExprExtract() *CelExpression {
	if x != nil {
		return x.ExprExtract
	}
	return nil
}

func (x *CelExtractString) GetDefaultValue() *wrapperspb.StringValue {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

var File_xds_type_v3_cel_proto protoreflect.FileDescriptor

const file_xds_type_v3_cel_proto_rawDesc = "" +
	"\n" +
	"\x15xds/type/v3/cel.proto\x12\vxds.type.v3\x1a&google/api/expr/v1alpha1/checked.proto\x1a%google/api/expr/v1alpha1/syntax.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1fxds/annotations/v3/status.proto\x1a\x1bbuf/validate/validate.proto\"\xe6\x01\n" +
	"\rCelExpression\x12K\n" +
	"\vparsed_expr\x18\x01 \x01(\v2$.google.api.expr.v1alpha1.ParsedExprB\x02\x18\x01H\x00R\n" +
	"parsedExpr\x12N\n" +
	"\fchecked_expr\x18\x02 \x01(\v2%.google.api.expr.v1alpha1.CheckedExprB\x02\x18\x01H\x00R\vcheckedExpr\x12&\n" +
	"\x0fcel_expr_string\x18\x05 \x01(\tR\rcelExprStringB\x10\n" +
	"\x0eexpr_specifier\"\x9c\x01\n" +
	"\x10CelExtractString\x12E\n" +
	"\fexpr_extract\x18\x01 \x01(\v2\x1a.xds.type.v3.CelExpressionB\x06\xbaH\x03\xc8\x01\x01R\vexprExtract\x12A\n" +
	"\rdefault_value\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\fdefaultValueBP\xd2Ƥ\xe1\x06\x02\b\x01\n" +
	"\x16com.github.xds.type.v3B\bCelProtoP\x01Z\"github.com/cncf/xds/go/xds/type/v3b\x06proto3"

var (
	file_xds_type_v3_cel_proto_rawDescOnce sync.Once
	file_xds_type_v3_cel_proto_rawDescData []byte
)

func file_xds_type_v3_cel_proto_rawDescGZIP() []byte {
	file_xds_type_v3_cel_proto_rawDescOnce.Do(func() {
		file_xds_type_v3_cel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_xds_type_v3_cel_proto_rawDesc), len(file_xds_type_v3_cel_proto_rawDesc)))
	})
	return file_xds_type_v3_cel_proto_rawDescData
}

var file_xds_type_v3_cel_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_xds_type_v3_cel_proto_goTypes = []any{
	(*CelExpression)(nil),          // 0: xds.type.v3.CelExpression
	(*CelExtractString)(nil),       // 1: xds.type.v3.CelExtractString
	(*v1alpha1.ParsedExpr)(nil),    // 2: google.api.expr.v1alpha1.ParsedExpr
	(*v1alpha1.CheckedExpr)(nil),   // 3: google.api.expr.v1alpha1.CheckedExpr
	(*wrapperspb.StringValue)(nil), // 4: google.protobuf.StringValue
}
var file_xds_type_v3_cel_proto_depIdxs = []int32{
	2, // 0: xds.type.v3.CelExpression.parsed_expr:type_name -> google.api.expr.v1alpha1.ParsedExpr
	3, // 1: xds.type.v3.CelExpression.checked_expr:type_name -> google.api.expr.v1alpha1.CheckedExpr
	0, // 2: xds.type.v3.CelExtractString.expr_extract:type_name -> xds.type.v3.CelExpression
	4, // 3: xds.type.v3.CelExtractString.default_value:type_name -> google.protobuf.StringValue
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_xds_type_v3_cel_proto_init() }
func file_xds_type_v3_cel_proto_init() {
	if File_xds_type_v3_cel_proto != nil {
		return
	}
	file_xds_type_v3_cel_proto_msgTypes[0].OneofWrappers = []any{
		(*CelExpression_ParsedExpr)(nil),
		(*CelExpression_CheckedExpr)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_xds_type_v3_cel_proto_rawDesc), len(file_xds_type_v3_cel_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_xds_type_v3_cel_proto_goTypes,
		DependencyIndexes: file_xds_type_v3_cel_proto_depIdxs,
		MessageInfos:      file_xds_type_v3_cel_proto_msgTypes,
	}.Build()
	File_xds_type_v3_cel_proto = out.File
	file_xds_type_v3_cel_proto_goTypes = nil
	file_xds_type_v3_cel_proto_depIdxs = nil
}
