load("@io_bazel_rules_go//go:def.bzl", "go_library")

# Go protobuf sources generated by Buf
# All .pb.go files are generated by Buf and committed to the repository
# To regenerate: run `buf generate` from repository root

# Collect all Go protobuf files generated by Buf
filegroup(
    name = "go_proto_sources",
    srcs = glob([
        "**/*.pb.go",
    ]),
    visibility = ["//visibility:public"],
)

# Go library with all generated protobuf code
go_library(
    name = "go_default_library",
    srcs = [":go_proto_sources"],
    importpath = "github.com/cncf/xds/go",
    visibility = ["//visibility:public"],
    deps = [
        "@org_golang_google_protobuf//types/known/anypb",
        "@org_golang_google_protobuf//types/known/durationpb", 
        "@org_golang_google_protobuf//types/known/structpb",
        "@org_golang_google_protobuf//types/known/timestamppb",
        "@org_golang_google_protobuf//types/known/wrapperspb",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//reflect/protoreflect",
        "@org_golang_google_protobuf//runtime/protoimpl",
        "@org_golang_google_grpc//:grpc",
    ],
)

# Alias for backward compatibility
alias(
    name = "go",
    actual = ":go_default_library",
    visibility = ["//visibility:public"],
)

# Manual generation trigger (for development only)
sh_binary(
    name = "generate_go",
    srcs = ["//tools:buf_generate.sh"],
    data = [
        "//:buf.gen.yaml",
        "//:buf.yaml",
    ],
    visibility = ["//visibility:public"],
)
